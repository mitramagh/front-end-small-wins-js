[{"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/VideoContent.js":"1","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/Content.js":"2","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/AudioContent.js":"3","/Users/mit/projects/capstone/front-end-small-wins-js/src/App.js":"4","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/ContentList.js":"5","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/SidebarData.js":"6","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/FileUpload.js":"7","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/LoginForm.js":"8","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/NewContentForm.js":"9","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/TextContent.js":"10","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/ContentsView.js":"11"},{"size":937,"mtime":1660184097836,"results":"12","hashOfConfig":"13"},{"size":1847,"mtime":1660187531678,"results":"14","hashOfConfig":"13"},{"size":1231,"mtime":1660185234671,"results":"15","hashOfConfig":"13"},{"size":6580,"mtime":1660185069539,"results":"16","hashOfConfig":"13"},{"size":1082,"mtime":1660184099204,"results":"17","hashOfConfig":"13"},{"size":823,"mtime":1660175884991,"results":"18","hashOfConfig":"13"},{"size":1287,"mtime":1660186710701,"results":"19","hashOfConfig":"13"},{"size":948,"mtime":1660182990567,"results":"20","hashOfConfig":"13"},{"size":2138,"mtime":1660184099306,"results":"21","hashOfConfig":"13"},{"size":451,"mtime":1660187695339,"results":"22","hashOfConfig":"13"},{"size":1443,"mtime":1660184958854,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"1xpwfy6",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/VideoContent.js",["62","63","64"],[],"import React, { useState } from \"react\";\nimport ReactPlayer from \"react-player/youtube\";\nimport Content from \"./Content\";\n\nconst VideoContent = ({ content, deleteContent, updateLikes }) => {\n  const [videoFilePath, setVideoFilePath] = useState(null);\n\n  const handleVideoUpload = (event) => {\n    setVideoFilePath(URL.createObjectURL(event.target.files[0]));\n  };\n\n  return (\n    <div className=\"Videocontent\">\n      {/* <input type=\"file\" onChange={handleVideoUpload} /> */}\n      <ReactPlayer\n        // url='https://www.youtube.com/watch?v=BSBEUcAyFyk'\n        url={content}\n        width=\"100%\"\n        height=\"100%\"\n        controls={true}\n      />\n\n      {/* <Content \n            type={content.type}\n            like_count={content.like_count}\n            comment={content.comment}\n            deleteContent={deleteContent}\n            updateLikes={updateLikes}\n            /> */}\n    </div>\n  );\n};\n\nexport default VideoContent;\n",[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/Content.js",["65"],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/AudioContent.js",["66","67","68"],[],"import ReactAudioPlayer from 'react-audio-player';\nimport React, {useState} from \"react\";\n// import PropTypes from \"prop-types\";\nimport Content from \"./Content\"\n\n\n\nconst AudioContent= ({ content, deleteContent, updateLikes }) => {\n  const [audioFilePath, setAudioFilePath] = useState(null);\n\n  const handleVideoUpload = (event) => {\n    setAudioFilePath(URL.createObjectURL(event.target.files[0]));\n    };\n\n  return (\n      <div className=\"Audiocontent\">\n          <ReactAudioPlayer \n          // autoPlay \n          src={content}\n          // src=\"https://edge2.pod.npr.org/anon.npr-mp3/npr/pmoney/2021/03/20210319_pmoney_pmpod1072_v2.mp3/20210319_pmoney_pmpod1072_v2.mp3_7fa9a66c548caf8d234e606871a23281_22988561.mp3?orgId=1&topicId=1017&d=1466&p=510289&story=979274990&t=podcast&e=979274990&dl=1&sc=siteplayer&size=23457211&awCollectionId=510289&awEpisodeId=979274990&dl=1&aw_0_1st.playerid=siteplayer&hash_redirect=1&x-total-bytes=22988561&x-ais-classified=streaming&listeningSessionID=0CD_382_216__e6b1343db6276ac3fc2e3bb5d8a984b6ab8e66af\" \n          onPlay={e => console.log(\"onPlay\")}\n          controls={true} />\n          \n          {/* <button> play this </button> */}\n\n      </div>\n);\n  }\n\n  export default AudioContent;","/Users/mit/projects/capstone/front-end-small-wins-js/src/App.js",["69","70","71","72","73"],[],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport GrowthPath from \"./pages/GrowthPath\";\nimport HappyToShare from \"./pages/HappyToShare\";\nimport Trash from \"./pages/Trash\";\nimport { LoginForm } from \"./components/LoginForm\";\n\nimport AddComment from \"./components/AddComment\";\nimport PlansView from \"./components/PlansView\";\nimport ContentsView from \"./components/ContentsView\";\nimport Content from \"./components/Content\";\nimport FileUpload from \"./components/FileUpload\";\n\nfunction App() {\n  const defaultPlans = [];\n  const defaultContents = [];\n\n  const url = \"http://127.0.0.1:5000\";\n  // useState for Plan\n  const [plans, setPlans] = useState(defaultPlans);\n  // useState for Content\n  const [contents, setContents] = useState(defaultContents);\n  // useState to keep track of what Plan we're currently looking at (user's choice)\n  const [chosenPlan, setChosenPlan] = useState(null);\n\n  const [files, setFiles] = useState([]);\n\n  // useEffect upon dom load\n  useEffect(() => {\n    // axios call, after promise is completed or rejected:\n    axios\n      .get(`${url}/plans`)\n      .then((response) => {\n        // iterate through each Plan and append to Plans\n        const updatedPlans = [...plans];\n        const dataList = response.data;\n        for (const data of dataList) {\n          updatedPlans.push(data);\n        }\n        setPlans(updatedPlans);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  // PlanView -> PlanList, NewPlanButton, NewPlanForm (visible/invisible depending on NewPlanButton toggle): siblings easier ^^ -> all state at PlanView level to control NewPlanForm visibility\n\n  //get all Contents from user chosen Plan -> pass down to Planlist\n  const getContentsFromOnePlan = (planId) => {\n    axios\n      .get(`${url}/plans/${planId}/contents`)\n      .then((response) => {\n        const updatedContents = [];\n        const dataList = response.data;\n        for (const data of dataList) {\n          updatedContents.push(data);\n        }\n        setContents(updatedContents);\n        console.log(`chosenplan: ${planId}`);\n        setChosenPlan(planId);\n        console.log(dataList);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // delete Plan\n  const deletePlan = (planId) => {\n    axios\n      .delete(`${url}/plans/${planId}`)\n      .then(() => {\n        const updatedPlans = plans.filter((plan) => plan.id !== planId);\n        setPlans(updatedPlans);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // delete Content\n  const deleteContent = (contentId) => {\n    axios\n      .delete(`${url}/contents/${contentId}`)\n      .then(() => {\n        const updatedContents = contents.filter(\n          (content) => content.content_id !== contentId\n        );\n        setContents(updatedContents);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // onformsubmitPlan\n  const onFormSubmitPlan = (requestBody) => {\n    axios\n      .post(`${url}/plans`, requestBody)\n      .then((response) => {\n        const newPlan = {\n          id: response.data.id,\n          idea: requestBody.idea,\n          planner: requestBody.planner,\n        };\n        setPlans([...plans, newPlan]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // on formsubmitContent\n  const onFormSubmitContent = (planId, requestBody) => {\n    axios\n      .post(`${url}/plans/${planId}/contents`, requestBody)\n      .then((response) => {\n        const newContent = {\n          content_id: response.data.content_id,\n          plan_id: response.data.plan_id,\n          type:response.data.type,\n          content: response.data.content,\n          like_count: response.data.like_count,\n          comment: response.data.comment,\n        };\n        setContents([...contents, newContent]);\n        console.log(newContent);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // add comments for planList\n  const addComment = () => {\n    console.log();\n  };\n\n  const updateLikeCts = (contentId) => {\n    const contentObj = contents.filter(\n      (content) => content.content_id === contentId\n    );\n    axios\n      .put(`${url}/contents/${contentId}`, {\n        like_count: contentObj.like_count + 1,\n      })\n      .then(() => {\n        const updatedContents = contents.map((content) => {\n          if (content.content_id === contentId) {\n            content.like_count++;\n          }\n          return content;\n        });\n        setContents(updatedContents);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const testContent = {\n    content: \"How to cook Pasta\",\n    type: \"text\",\n    plan_id: 1,\n    content_id: 1,\n  };\n\n  // default landing page\n  if (chosenPlan === null) {\n    return (\n      <div>\n        <Router>\n          <Sidebar />\n          <Routes>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/login\" element={<LoginForm />} />\n            <Route path=\"/growthpath\" element={<ContentsView />} />\n            <Route path=\"/happytoshare\" component={HappyToShare} />\n            <Route path=\"/trash\" component={Trash} />\n          </Routes>\n        </Router>\n        <h1>Hello Planner!</h1>\n        {/* <Content {...testContent}/> */}\n        <PlansView\n          planData={plans}\n          selectPlanCallback={getContentsFromOnePlan}\n          deletePlanCallback={deletePlan}\n          makePlanCallback={onFormSubmitPlan}\n          handleAddComment={addComment}\n        ></PlansView>\n      </div>\n    );\n  }\n  // render Contentsview when user choose certain Plan\n  else {\n    let userChoice = null;\n    for (const plan of plans) {\n      if (plan.id === chosenPlan) {\n        userChoice = plan;\n        break;\n      }\n    }\n\n    console.log(userChoice);\n    return (\n      <div>\n        <h1>Plan : {userChoice.idea}</h1>\n        {/* <Content {...testContent}/> */}\n        <div>Upload File</div>\n        <FileUpload\n          files={files}\n          setFiles={setFiles}\n          deleteContent={deleteContent}\n        />\n        <ContentsView\n          contents={contents}\n          updateLikes={updateLikeCts}\n          deleteContent={deleteContent}\n          submitContent={onFormSubmitContent}\n          chosenPlan={chosenPlan}\n          setChosenPlan={setChosenPlan}\n          setContents={setContents}\n        ></ContentsView>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/ContentList.js",[],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/SidebarData.js",[],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/FileUpload.js",["74","75"],[],"import React, { useState } from 'react';\nimport * as FaIcons from 'react-icons/fa';\n// import axios from 'axios';\nimport \"./FileUpload.css\";\nimport axios from 'axios';\n\n// const url = \"http://127.0.0.1:5000\";\n\n\n\nconst FileUpload =({submitContent, deleteContent, chosenPlan}) => {\n \n  const uploadHandler = (event) => {\n    console.log(\"handlercall\")\n    console.log(event.target.files[0])\n    const { files } = event.target;\n    if (files?.length) {\n      const reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n      reader.onload = () => {\n        const buffer = reader.result;\n        submitContent(chosenPlan, {\n          content: buffer, \n          type: files[0].type,\n        });\n      };\n      reader.onerror = error => {\n        console.error('Error: ', error); //eslint-disable-line\n      };\n    }\n  }\n\n  return (\n    <div className=\"file-card\">\n      <div className=\"file-inputs\">\n        <input \n        name=\"file\" \n        type=\"file\" \n        onChange={uploadHandler}\n        />\n        <button>\n          <i>\n            <FaIcons.FaPlus/> \n            {/* <p> Upload </p> */}\n          </i>\n\n        </button>\n      </div>\n      <p className=\"main\">Support Files</p>\n      <p className=\"info\">PDF, JPG, PNG</p>\n\n    </div>\n  )\n}\n\nexport default FileUpload;","/Users/mit/projects/capstone/front-end-small-wins-js/src/components/LoginForm.js",[],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/NewContentForm.js",[],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/TextContent.js",["76"],[],"/Users/mit/projects/capstone/front-end-small-wins-js/src/components/ContentsView.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},{"ruleId":"77","severity":1,"message":"81","line":8,"column":12,"nodeType":"79","messageId":"80","endLine":8,"endColumn":25},{"ruleId":"77","severity":1,"message":"82","line":10,"column":11,"nodeType":"79","messageId":"80","endLine":10,"endColumn":28},{"ruleId":"83","severity":1,"message":"84","line":47,"column":41,"nodeType":"85","endLine":47,"endColumn":62},{"ruleId":"77","severity":1,"message":"78","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":15},{"ruleId":"77","severity":1,"message":"86","line":9,"column":10,"nodeType":"79","messageId":"80","endLine":9,"endColumn":23},{"ruleId":"77","severity":1,"message":"82","line":11,"column":9,"nodeType":"79","messageId":"80","endLine":11,"endColumn":26},{"ruleId":"77","severity":1,"message":"87","line":7,"column":8,"nodeType":"79","messageId":"80","endLine":7,"endColumn":18},{"ruleId":"77","severity":1,"message":"88","line":12,"column":8,"nodeType":"79","messageId":"80","endLine":12,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":15,"column":8,"nodeType":"79","messageId":"80","endLine":15,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":49,"column":6,"nodeType":"91","endLine":49,"endColumn":8,"suggestions":"92"},{"ruleId":"77","severity":1,"message":"93","line":166,"column":9,"nodeType":"79","messageId":"80","endLine":166,"endColumn":20},{"ruleId":"77","severity":1,"message":"94","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"95","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":15},"no-unused-vars","'Content' is defined but never used.","Identifier","unusedVar","'videoFilePath' is assigned a value but never used.","'handleVideoUpload' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'audioFilePath' is assigned a value but never used.","'GrowthPath' is defined but never used.","'AddComment' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'plans'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'testContent' is assigned a value but never used.","'useState' is defined but never used.","'axios' is defined but never used.",{"desc":"97","fix":"98"},"Update the dependencies array to be: [plans]",{"range":"99","text":"100"},[1635,1637],"[plans]"]