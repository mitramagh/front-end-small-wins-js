{"ast":null,"code":"var _jsxFileName = \"/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/CardList.js\";\n// import axios from \"axios\";\nimport React from \"react\";\nimport \"./CardList.css\";\nimport Card from \"./Card\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardList = _ref => {\n  let {\n    cards,\n    deleteCard,\n    updateLikes\n  } = _ref;\n  const cardComponents = cards.map(card => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      card_id: card.card_id,\n      board_id: card.board_id,\n      message: card.message,\n      like_count: card.like_count,\n      deleteCard: deleteCard,\n      updateLikes: updateLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cardList\",\n    children: cardComponents\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CardList;\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    card_id: PropTypes.number.isRequired,\n    board_id: PropTypes.number.isRequired,\n    message: PropTypes.string.isRequired,\n    like_count: PropTypes.number.isRequired\n  })),\n  deleteCard: PropTypes.func.isRequired,\n  updateLikes: PropTypes.func.isRequired\n};\nexport default CardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardList\");","map":{"version":3,"names":["React","Card","PropTypes","CardList","cards","deleteCard","updateLikes","cardComponents","map","card","card_id","board_id","message","like_count","propTypes","arrayOf","shape","number","isRequired","string","func"],"sources":["/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/CardList.js"],"sourcesContent":["// import axios from \"axios\";\nimport React from \"react\";\nimport \"./CardList.css\";\nimport Card from \"./Card\";\nimport PropTypes from \"prop-types\";\n\nconst CardList = ({ cards, deleteCard, updateLikes }) => {\n  const cardComponents = cards.map((card) => {\n    return (\n      <Card\n        card_id={card.card_id}\n        board_id={card.board_id}\n        message={card.message}\n        like_count={card.like_count}\n        deleteCard={deleteCard}\n        updateLikes={updateLikes}\n      ></Card>\n    );\n  });\n\n  return <div className=\"cardList\">{cardComponents}</div>;\n};\n\nCardList.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      card_id: PropTypes.number.isRequired,\n      board_id: PropTypes.number.isRequired,\n      message: PropTypes.string.isRequired,\n      like_count: PropTypes.number.isRequired,\n    })\n  ),\n  deleteCard: PropTypes.func.isRequired,\n  updateLikes: PropTypes.func.isRequired,\n};\n\nexport default CardList;\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,QAAQ,GAAG,QAAwC;EAAA,IAAvC;IAAEC,KAAF;IAASC,UAAT;IAAqBC;EAArB,CAAuC;EACvD,MAAMC,cAAc,GAAGH,KAAK,CAACI,GAAN,CAAWC,IAAD,IAAU;IACzC,oBACE,QAAC,IAAD;MACE,OAAO,EAAEA,IAAI,CAACC,OADhB;MAEE,QAAQ,EAAED,IAAI,CAACE,QAFjB;MAGE,OAAO,EAAEF,IAAI,CAACG,OAHhB;MAIE,UAAU,EAAEH,IAAI,CAACI,UAJnB;MAKE,UAAU,EAAER,UALd;MAME,WAAW,EAAEC;IANf;MAAA;MAAA;MAAA;IAAA,QADF;EAUD,CAXsB,CAAvB;EAaA,oBAAO;IAAK,SAAS,EAAC,UAAf;IAAA,UAA2BC;EAA3B;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAfD;;KAAMJ,Q;AAiBNA,QAAQ,CAACW,SAAT,GAAqB;EACnBV,KAAK,EAAEF,SAAS,CAACa,OAAV,CACLb,SAAS,CAACc,KAAV,CAAgB;IACdN,OAAO,EAAER,SAAS,CAACe,MAAV,CAAiBC,UADZ;IAEdP,QAAQ,EAAET,SAAS,CAACe,MAAV,CAAiBC,UAFb;IAGdN,OAAO,EAAEV,SAAS,CAACiB,MAAV,CAAiBD,UAHZ;IAIdL,UAAU,EAAEX,SAAS,CAACe,MAAV,CAAiBC;EAJf,CAAhB,CADK,CADY;EASnBb,UAAU,EAAEH,SAAS,CAACkB,IAAV,CAAeF,UATR;EAUnBZ,WAAW,EAAEJ,SAAS,CAACkB,IAAV,CAAeF;AAVT,CAArB;AAaA,eAAef,QAAf"},"metadata":{},"sourceType":"module"}