{"ast":null,"code":"var _jsxFileName = \"/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/NewBoardForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NewBoardForm.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultForm = {\n  title: \"\",\n  owner: \"\"\n};\n\nconst NewBoardForm = props => {\n  _s();\n\n  const [formData, setFormData] = useState(defaultForm);\n\n  const handleFormInput = event => {\n    const inputElement = event.target;\n    const name = inputElement.name;\n    const value = inputElement.value; // make a new object based on form object\n\n    const newForm = { ...formData\n    };\n    newForm[name] = value; // console.log(newForm);\n\n    setFormData(newForm);\n  };\n\n  const handleFormSubmission = event => {\n    event.preventDefault();\n    props.makeBoardCallback(formData);\n    props.handleClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-icon\",\n        onClick: props.handleClose,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleFormSubmission,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            children: \"Create a new card.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"title\",\n            value: formData.title,\n            onChange: handleFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Owner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"owner\",\n            value: formData.owner,\n            onChange: handleFormInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewBoardForm, \"3s4hBYyIA7Xc8F5N2L8wAfhgogE=\");\n\n_c = NewBoardForm;\nNewBoardForm.propTypes = {\n  makeBoardCallback: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default NewBoardForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewBoardForm\");","map":{"version":3,"names":["React","PropTypes","useState","defaultForm","title","owner","NewBoardForm","props","formData","setFormData","handleFormInput","event","inputElement","target","name","value","newForm","handleFormSubmission","preventDefault","makeBoardCallback","handleClose","propTypes","func","isRequired"],"sources":["/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/NewBoardForm.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./NewBoardForm.css\";\nimport { useState } from \"react\";\n\nconst defaultForm = {\n  title: \"\",\n  owner: \"\",\n};\n\nconst NewBoardForm = (props) => {\n  const [formData, setFormData] = useState(defaultForm);\n\n  const handleFormInput = (event) => {\n    const inputElement = event.target;\n    const name = inputElement.name;\n    const value = inputElement.value;\n\n    // make a new object based on form object\n    const newForm = { ...formData };\n    newForm[name] = value;\n    // console.log(newForm);\n    setFormData(newForm);\n  };\n\n  const handleFormSubmission = (event) => {\n    event.preventDefault();\n    props.makeBoardCallback(formData);\n    props.handleClose();\n  };\n\n  return (\n    <div className=\"popup-box\">\n      <div className=\"box\">\n        <span className=\"close-icon\" onClick={props.handleClose}>\n          x\n        </span>\n        <form onSubmit={handleFormSubmission}>\n          <fieldset>\n            <legend>Create a new card.</legend>\n            <label>Title</label>\n            <input\n              type=\"text\"\n              name=\"title\"\n              value={formData.title}\n              onChange={handleFormInput}\n            ></input>\n            <label>Owner</label>\n            <input\n              type=\"text\"\n              name=\"owner\"\n              value={formData.owner}\n              onChange={handleFormInput}\n            ></input>\n\n            <input type=\"submit\"></input>\n          </fieldset>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nNewBoardForm.propTypes = {\n  makeBoardCallback: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default NewBoardForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,EADW;EAElBC,KAAK,EAAE;AAFW,CAApB;;AAKA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACC,WAAD,CAAxC;;EAEA,MAAMO,eAAe,GAAIC,KAAD,IAAW;IACjC,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAA3B;IACA,MAAMC,IAAI,GAAGF,YAAY,CAACE,IAA1B;IACA,MAAMC,KAAK,GAAGH,YAAY,CAACG,KAA3B,CAHiC,CAKjC;;IACA,MAAMC,OAAO,GAAG,EAAE,GAAGR;IAAL,CAAhB;IACAQ,OAAO,CAACF,IAAD,CAAP,GAAgBC,KAAhB,CAPiC,CAQjC;;IACAN,WAAW,CAACO,OAAD,CAAX;EACD,CAVD;;EAYA,MAAMC,oBAAoB,GAAIN,KAAD,IAAW;IACtCA,KAAK,CAACO,cAAN;IACAX,KAAK,CAACY,iBAAN,CAAwBX,QAAxB;IACAD,KAAK,CAACa,WAAN;EACD,CAJD;;EAMA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,uBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAM,SAAS,EAAC,YAAhB;QAA6B,OAAO,EAAEb,KAAK,CAACa,WAA5C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAM,QAAQ,EAAEH,oBAAhB;QAAA,uBACE;UAAA,wBACE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF,eAGE;YACE,IAAI,EAAC,MADP;YAEE,IAAI,EAAC,OAFP;YAGE,KAAK,EAAET,QAAQ,CAACJ,KAHlB;YAIE,QAAQ,EAAEM;UAJZ;YAAA;YAAA;YAAA;UAAA,QAHF,eASE;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF,eAUE;YACE,IAAI,EAAC,MADP;YAEE,IAAI,EAAC,OAFP;YAGE,KAAK,EAAEF,QAAQ,CAACH,KAHlB;YAIE,QAAQ,EAAEK;UAJZ;YAAA;YAAA;YAAA;UAAA,QAVF,eAiBE;YAAO,IAAI,EAAC;UAAZ;YAAA;YAAA;YAAA;UAAA,QAjBF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD,CAnDD;;GAAMJ,Y;;KAAAA,Y;AAqDNA,YAAY,CAACe,SAAb,GAAyB;EACvBF,iBAAiB,EAAElB,SAAS,CAACqB,IAAV,CAAeC,UADX;EAEvBH,WAAW,EAAEnB,SAAS,CAACqB,IAAV,CAAeC;AAFL,CAAzB;AAKA,eAAejB,YAAf"},"metadata":{},"sourceType":"module"}