{"ast":null,"code":"var _jsxFileName = \"/Users/mit/projects/ins-board/front-end-inspiration-board/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BoardsView from \"./components/BoardsView\";\nimport CardsView from \"./components/CardsView\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const defaultBoards = [];\n  const defaultCards = [];\n  const url = \"https://powerful-lake-89201.herokuapp.com\"; // useState for Board\n\n  const [boards, setBoards] = useState(defaultBoards); // useState for Card\n\n  const [cards, setCards] = useState(defaultCards); // useState to keep track of what board we're currently looking at (user's choice)\n\n  const [chosenBoard, setChosenBoard] = useState(null); // useEffect upon dom load\n\n  useEffect(() => {\n    // axios call, after promise is completed or rejected:\n    axios.get(`${url}/boards`).then(response => {\n      // iterate through each board and append to defaultBoards\n      const updatedBoards = response.data.map(board => {\n        return [...defaultBoards, board];\n      });\n      setBoards(updatedBoards);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []); // BoardView -> BoardList, NewBoardButton, NewBoardForm (visible/invisible depending on NewBoardButton toggle): siblings easier ^^ -> all state at BoardView level to control NewBoardForm visibility\n  // get all cards from user chosen board -> pass down to boardlist\n\n  const getCardsFromOneBoard = boardId => {\n    axios.get(`${url}/boards/${boardId}/cards`).then(response => {\n      // iterate through each card and append to defaultCards\n      const updatedCards = response.data.map(card => {\n        return [...defaultCards, card];\n      });\n      setCards(updatedCards);\n      setChosenBoard(boardId);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // delete board (need to add endpoints)\n\n\n  const deleteBoard = boardId => {\n    axios.delete(`${url}/boards/${boardId}`).then(() => {\n      const updatedBoards = boards.filter(board => board.board_id !== boardId);\n      setBoards(updatedBoards);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // delete card\n\n\n  const deleteCard = (boardId, cardId) => {\n    axios.delete(`${url}/cards/${cardId}`).then(() => {\n      const updatedCards = cards.filter(card => card.card_id !== cardId);\n      setCards(updatedCards);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // onformsubmitboard\n\n\n  const onFormSubmitBoard = requestBody => {\n    axios.post(`${url}/boards`, requestBody).then(response => {\n      const newBoard = {\n        board_id: response.id,\n        title: requestBody.title,\n        owner: requestBody.owner\n      };\n      setBoards([...boards, newBoard]);\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // on formsubmitcard\n\n\n  const onFormSubmitCard = (boardId, requestBody) => {\n    axios.post(`${url}/boards/${boardId}/card`, requestBody).then(response => {\n      const newCard = {\n        card_id: response.id,\n        message: requestBody.message,\n        like_count: requestBody.like_count\n      };\n      setCards([...cards, newCard]);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const updateLikeCts = cardId => {\n    const cardObj = cards.filter(card => card.card_id == cardId);\n    axios.put(`https://powerful-lake-89201.herokuapp.com/cards/${cardId}`, {\n      like_count: cardObj[like_count] + 1\n    }).then(() => {\n      const updatedCards = cards.map(card => {\n        if (card.card_id === cardId) {\n          card.like_count++;\n        }\n\n        return card;\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }; // default landing page\n\n\n  if (chosenBoard === null) {\n    return /*#__PURE__*/_jsxDEV(BoardsView, {\n      boardData: boards,\n      selectoBoardCallback: getCardsFromOneBoard,\n      deleteBoardCallback: deleteBoard,\n      makeBoardCallback: onFormSubmitBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  } // render cardsview when user choose certain board\n  // need to add logic to set chosenBoard state back to null when user clicked 'x' button in cardsview\n  else {\n    return /*#__PURE__*/_jsxDEV(CardsView, {\n      cards: cards,\n      updateLikes: updateLikeCts,\n      deleteCard: deleteCard,\n      submitCard: onFormSubmitCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"+3ke6Ch2Wz7bC8f+nX3cRsZrmKM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","useEffect","BoardsView","CardsView","App","defaultBoards","defaultCards","url","boards","setBoards","cards","setCards","chosenBoard","setChosenBoard","get","then","response","updatedBoards","data","map","board","catch","e","console","log","getCardsFromOneBoard","boardId","updatedCards","card","deleteBoard","delete","filter","board_id","deleteCard","cardId","card_id","onFormSubmitBoard","requestBody","post","newBoard","id","title","owner","onFormSubmitCard","newCard","message","like_count","updateLikeCts","cardObj","put"],"sources":["/Users/mit/projects/ins-board/front-end-inspiration-board/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BoardsView from \"./components/BoardsView\";\nimport CardsView from \"./components/CardsView\";\n\nfunction App() {\n  const defaultBoards = [];\n  const defaultCards = [];\n\n  const url = \"https://powerful-lake-89201.herokuapp.com\";\n  // useState for Board\n  const [boards, setBoards] = useState(defaultBoards);\n  // useState for Card\n  const [cards, setCards] = useState(defaultCards);\n  // useState to keep track of what board we're currently looking at (user's choice)\n  const [chosenBoard, setChosenBoard] = useState(null);\n\n  // useEffect upon dom load\n  useEffect(() => {\n    // axios call, after promise is completed or rejected:\n    axios\n      .get(`${url}/boards`)\n      .then((response) => {\n        // iterate through each board and append to defaultBoards\n        const updatedBoards = response.data.map((board) => {\n          return [...defaultBoards, board];\n        });\n        setBoards(updatedBoards);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }, []);\n\n  // BoardView -> BoardList, NewBoardButton, NewBoardForm (visible/invisible depending on NewBoardButton toggle): siblings easier ^^ -> all state at BoardView level to control NewBoardForm visibility\n\n  // get all cards from user chosen board -> pass down to boardlist\n  const getCardsFromOneBoard = (boardId) => {\n    axios\n      .get(`${url}/boards/${boardId}/cards`)\n      .then((response) => {\n        // iterate through each card and append to defaultCards\n        const updatedCards = response.data.map((card) => {\n          return [...defaultCards, card];\n        });\n        setCards(updatedCards);\n        setChosenBoard(boardId);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // delete board (need to add endpoints)\n  const deleteBoard = (boardId) => {\n    axios\n      .delete(`${url}/boards/${boardId}`)\n      .then(() => {\n        const updatedBoards = boards.filter(\n          (board) => board.board_id !== boardId\n        );\n        setBoards(updatedBoards);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // delete card\n  const deleteCard = (boardId, cardId) => {\n    axios\n      .delete(`${url}/cards/${cardId}`)\n      .then(() => {\n        const updatedCards = cards.filter((card) => card.card_id !== cardId);\n        setCards(updatedCards);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // onformsubmitboard\n  const onFormSubmitBoard = (requestBody) => {\n    axios\n      .post(`${url}/boards`, requestBody)\n      .then((response) => {\n        const newBoard = {\n          board_id: response.id,\n          title: requestBody.title,\n          owner: requestBody.owner,\n        };\n        setBoards([...boards, newBoard]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // on formsubmitcard\n  const onFormSubmitCard = (boardId, requestBody) => {\n    axios\n      .post(`${url}/boards/${boardId}/card`, requestBody)\n      .then((response) => {\n        const newCard = {\n          card_id: response.id,\n          message: requestBody.message,\n          like_count: requestBody.like_count,\n        };\n        setCards([...cards, newCard]);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  const updateLikeCts = (cardId) => {\n    const cardObj = cards.filter((card) => card.card_id == cardId);\n    axios\n      .put(`https://powerful-lake-89201.herokuapp.com/cards/${cardId}`, {\n        like_count: cardObj[like_count] + 1,\n      })\n      .then(() => {\n        const updatedCards = cards.map((card) => {\n          if (card.card_id === cardId) {\n            card.like_count++;\n          }\n          return card;\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  // default landing page\n  if (chosenBoard === null) {\n    return (\n      <BoardsView\n        boardData={boards}\n        selectoBoardCallback={getCardsFromOneBoard}\n        deleteBoardCallback={deleteBoard}\n        makeBoardCallback={onFormSubmitBoard}\n      ></BoardsView>\n    );\n  }\n  // render cardsview when user choose certain board\n  // need to add logic to set chosenBoard state back to null when user clicked 'x' button in cardsview\n  else {\n    return (\n      <CardsView\n        cards={cards}\n        updateLikes={updateLikeCts}\n        deleteCard={deleteCard}\n        submitCard={onFormSubmitCard}\n      ></CardsView>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}