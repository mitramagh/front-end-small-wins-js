{"ast":null,"code":"var _jsxFileName = \"/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/CardsView.js\";\n// import axios from \"axios\";\nimport \"./CardsView.css\";\nimport CardList from \"./CardList\";\nimport NewCardButton from \"./NewCardButton\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardsView = _ref => {\n  let {\n    cards,\n    deleteCard,\n    submitCard,\n    updateLikes,\n    chosenBoard,\n    setChosenBoard\n  } = _ref;\n\n  const exitBoard = () => {\n    setChosenBoard(null);\n  };\n\n  const funcOnSortChange = event => {\n    const sortOption = document.getElementById(\"sortOptionsDropDown\");\n    sortOption.addEventListener(\"change\", sortCards);\n  }; // have state for cards?   setCards()\n\n\n  const sortCards = () => {\n    let optionChosen = document.getElementById(\"sortOptionsDropDown\").value;\n\n    if (optionChosen === \"sort alphabetically\") {\n      cards.sort((obj1, obj2) => obj1.message > obj2.message ? 1 : -1);\n    } else if (optionChosen === \"sort by likes\") {\n      cards.sort((obj1, obj2) => obj1.like_count > obj2.like_count ? 1 : -1);\n    } else if (optionChosen === \"sort by ID\") {\n      cards.sort((obj1, obj2) => obj1.card_id > obj2.card_id ? 1 : -1);\n    }\n\n    setCards(cards);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: exitBoard,\n      children: \"Return to boards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      cards: cards,\n      deleteCard: deleteCard,\n      updateLikes: updateLikes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewCardButton, {\n      submitCard: submitCard,\n      chosenBoard: chosenBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"sortOptionsDropDown\",\n      onSortChange: funcOnSortChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        children: \" sort alphabetically \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \" sort by likes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        children: \" sort by ID \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CardsView;\nCardsView.propTypes = {\n  cards: PropTypes.arrayOf(PropTypes.shape({\n    card_id: PropTypes.number.isRequired,\n    message: PropTypes.string.isRequired,\n    like_count: PropTypes.number.isRequired\n  })),\n  deleteCard: PropTypes.func.isRequired,\n  submitCard: PropTypes.func.isRequired,\n  updateLikes: PropTypes.func.isRequired\n};\nexport default CardsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardsView\");","map":{"version":3,"names":["CardList","NewCardButton","PropTypes","CardsView","cards","deleteCard","submitCard","updateLikes","chosenBoard","setChosenBoard","exitBoard","funcOnSortChange","event","sortOption","document","getElementById","addEventListener","sortCards","optionChosen","value","sort","obj1","obj2","message","like_count","card_id","setCards","propTypes","arrayOf","shape","number","isRequired","string","func"],"sources":["/Users/mit/projects/ins-board/front-end-inspiration-board/src/components/CardsView.js"],"sourcesContent":["// import axios from \"axios\";\nimport \"./CardsView.css\";\nimport CardList from \"./CardList\";\nimport NewCardButton from \"./NewCardButton\";\nimport PropTypes from \"prop-types\";\n\nconst CardsView = ({\n  cards,\n  deleteCard,\n  submitCard,\n  updateLikes,\n  chosenBoard,\n  setChosenBoard,\n}) => {\n  const exitBoard = () => {\n    setChosenBoard(null);\n  };\n\n  const funcOnSortChange = (event) => {\n    const sortOption = document.getElementById(\"sortOptionsDropDown\");\n    sortOption.addEventListener(\"change\", sortCards);\n  };\n\n  // have state for cards?   setCards()\n\n  const sortCards = () => {\n    let optionChosen = document.getElementById(\"sortOptionsDropDown\").value;\n    if (optionChosen === \"sort alphabetically\") {\n      cards.sort((obj1, obj2) => (obj1.message > obj2.message ? 1 : -1));\n    } else if (optionChosen === \"sort by likes\") {\n      cards.sort((obj1, obj2) => (obj1.like_count > obj2.like_count ? 1 : -1));\n    } else if (optionChosen === \"sort by ID\") {\n      cards.sort((obj1, obj2) => (obj1.card_id > obj2.card_id ? 1 : -1));\n    }\n    setCards(cards);\n  };\n\n  return (\n    <div>\n      <button onClick={exitBoard}>Return to boards</button>\n      <CardList\n        cards={cards}\n        deleteCard={deleteCard}\n        updateLikes={updateLikes}\n      ></CardList>\n      <NewCardButton\n        submitCard={submitCard}\n        chosenBoard={chosenBoard}\n      ></NewCardButton>\n      <select id=\"sortOptionsDropDown\" onSortChange={funcOnSortChange}>\n        <option> sort alphabetically </option>\n        <option> sort by likes </option>\n        <option> sort by ID </option>\n      </select>\n    </div>\n  );\n};\n\nCardsView.propTypes = {\n  cards: PropTypes.arrayOf(\n    PropTypes.shape({\n      card_id: PropTypes.number.isRequired,\n      message: PropTypes.string.isRequired,\n      like_count: PropTypes.number.isRequired,\n    })\n  ),\n  deleteCard: PropTypes.func.isRequired,\n  submitCard: PropTypes.func.isRequired,\n  updateLikes: PropTypes.func.isRequired,\n};\n\nexport default CardsView;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}